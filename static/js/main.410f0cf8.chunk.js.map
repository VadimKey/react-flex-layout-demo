{"version":3,"sources":["model.js","App.js","reportWebVitals.js","index.js"],"names":["layout_model_json","global","borders","layout","Main","props","factory","node","getComponent","className","getName","state","model","FlexLayout","Model","fromJson","setOnAllowDrop","allowDrop","dragNode","dropInfo","dropNode","getType","getParent","Layout","this","React","Component","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","App"],"mappings":"wQAwCeA,EAxCW,CACxBC,OAAQ,GACRC,QAAS,GACTC,OAAQ,CACN,KAAQ,MACR,OAAU,IACV,SAAY,CACV,CACE,KAAQ,SACR,OAAU,GACV,SAAY,EACZ,SAAY,CACV,CACE,KAAQ,MACR,KAAQ,SACR,UAAa,UAInB,CACE,KAAQ,SACR,OAAU,GACV,SAAY,EACZ,SAAY,CACV,CACE,KAAQ,MACR,KAAQ,SACR,UAAa,QAEf,CACE,KAAQ,MACR,KAAQ,SACR,UAAa,aCzBnBC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuBRC,QAAU,SAACC,GAET,GAAkB,SADAA,EAAKC,eAErB,OAAO,sBAAKC,UAAU,QAAf,mBAA8BF,EAAKG,cAzB5C,EAAKC,MAAQ,CAACC,MAAOC,IAAWC,MAAMC,SAASf,IAC/C,EAAKW,MAAMC,MAAMI,eAAe,EAAKC,WAHpB,E,sDAMTC,EAAUC,GAClB,IAAMC,EAAWD,EAASZ,KAG1B,OAA2B,WAAvBa,EAASC,WACiB,MAAxBH,EAASI,aAA0D,WAAnCJ,EAASI,YAAYD,aAKhC,WAAvBD,EAASC,WACiB,MAAxBH,EAASI,aAA0D,WAAnCJ,EAASI,YAAYD,a,+BAe3D,OACE,cAAC,IAAWE,OAAZ,CAAmBX,MAAOY,KAAKb,MAAMC,MAAON,QAASkB,KAAKlB,c,GAnC7CmB,IAAMC,WAyCzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAElC1B,QCtCA2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdL,IAASC,OACP,cAAC,IAAMY,WAAP,UACE,cAACC,EAAD,MAEFZ,SAASC,eAAe,SAM1BC,M","file":"static/js/main.410f0cf8.chunk.js","sourcesContent":["const layout_model_json = {\n  global: { },\n  borders: [ ],\n  layout: {\n    \"type\": \"row\",\n    \"weight\": 100,\n    \"children\": [\n      {\n        \"type\": \"tabset\",\n        \"weight\": 50,\n        \"selected\": 0,\n        \"children\": [\n          {\n            \"type\": \"tab\",\n            \"name\": \"Quoter\",\n            \"component\": \"grid\",\n          }\n        ]\n      },\n      {\n        \"type\": \"tabset\",\n        \"weight\": 50,\n        \"selected\": 0,\n        \"children\": [\n          {\n            \"type\": \"tab\",\n            \"name\": \"Trades\",\n            \"component\": \"grid\",\n          },\n          {\n            \"type\": \"tab\",\n            \"name\": \"Orders\",\n            \"component\": \"grid\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default layout_model_json;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FlexLayout from \"flexlayout-react\";\nimport layout_model_json from \"./model\";\n\n<link rel=\"stylesheet\" href=\"node_modules/flexlayout-react/style/dark.css\" />\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {model: FlexLayout.Model.fromJson(layout_model_json)}; \n    this.state.model.setOnAllowDrop(this.allowDrop);\n  }\n\n  allowDrop(dragNode, dropInfo) {\n    const dropNode = dropInfo.node;\n\n    // prevent non-border tabs dropping into borders\n    if (dropNode.getType() === \"border\" \n      && (dragNode.getParent() == null || dragNode.getParent().getType() !== \"border\")) {\n        return false;\n    }\n\n    // prevent border tabs dropping into main layout\n    if (dropNode.getType() !== \"border\"\n      && (dragNode.getParent() != null && dragNode.getParent().getType() === \"border\") ) {\n        return false;\n    }\n\n    return true;\n  }\n\n  factory = (node) => {\n    const component = node.getComponent();\n    if (component === \"grid\") {\n      return <div className=\"panel\">Panel {node.getName()}</div>;\n    }\n  }\n\n  render() {\n    return(\n      <FlexLayout.Layout model={this.state.model} factory={this.factory}/>\n    );\n  }\n\n};\n\nReactDOM.render(<Main/>, document.getElementById(\"root\"));\n\nexport default Main;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}